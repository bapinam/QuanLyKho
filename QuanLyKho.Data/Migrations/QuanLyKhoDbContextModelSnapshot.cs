// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyKho.Date.EF;

namespace QuanLyKho.Data.Migrations
{
    [DbContext(typeof(QuanLyKhoDbContext))]
    partial class QuanLyKhoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("0275d5a7-da4a-41c3-85ed-15e53cd1b7a0"),
                            RoleId = new Guid("88a28f0b-99cd-4893-ab70-0189c8c7fec5")
                        },
                        new
                        {
                            UserId = new Guid("53e27774-4d9e-47bc-a7dc-b4faa6b9e140"),
                            RoleId = new Guid("c7cbdfd3-bdda-4a4a-b2ae-5475f7400f56")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b
                        .HasComment("Vai Trò");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88a28f0b-99cd-4893-ab70-0189c8c7fec5"),
                            ConcurrencyStamp = "9b7445e2-7761-4d0a-80b7-deb4b4a3c629",
                            MoTa = "Vai trò Administrator Hệ Thống",
                            Name = "SystemAdmin",
                            NormalizedName = "SystemAdmin"
                        },
                        new
                        {
                            Id = new Guid("c7cbdfd3-bdda-4a4a-b2ae-5475f7400f56"),
                            ConcurrencyStamp = "c3f26559-d77c-499a-a97b-14b3bbf5a496",
                            MoTa = "Vai trò Administrator",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("1ed2a1cf-5d3d-471f-baf0-3b72d7161969"),
                            ConcurrencyStamp = "ad9c8437-58db-418c-aee4-80fa65a4ba4c",
                            MoTa = "Vai trò Quản lý đặt hàng",
                            Name = "QuanLyDatHang",
                            NormalizedName = "QuanLyDatHang"
                        },
                        new
                        {
                            Id = new Guid("b2d0f535-7053-4d6c-9c3f-28e892858683"),
                            ConcurrencyStamp = "cb40a6d5-4a6b-4e17-9f4c-83053cc485c7",
                            MoTa = "Vai trò Quản lý chế biến",
                            Name = "QuanLyCheBien",
                            NormalizedName = "QuanLyCheBien"
                        });
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CanCuocCongDan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LoaiTaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TinhTrangLamViec")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("MaSo", "CanCuocCongDan")
                        .IsUnique();

                    b.ToTable("AspNetUsers");

                    b
                        .HasComment("Người Dùng");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0275d5a7-da4a-41c3-85ed-15e53cd1b7a0"),
                            AccessFailedCount = 0,
                            CanCuocCongDan = "0123456789",
                            ConcurrencyStamp = "802bb920-ce47-44a9-a1ac-b7f7d4c8e48b",
                            DiaChi = "Cần Thơ",
                            Email = "khoaluan@gmail.com",
                            EmailConfirmed = true,
                            GioiTinh = true,
                            Ho = "Lương Nhựt",
                            LoaiTaiKhoan = 2,
                            LockoutEnabled = false,
                            MaSo = "SystemAdmin",
                            NgaySinh = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "khoaluan@gmail.com",
                            NormalizedUserName = "SystemAdmin",
                            PasswordHash = "AQAAAAEAACcQAAAAEGJoxkfH7Pd8OqQCYt2D7l9vdv0Pon0Df9Oq/zEIvJXwlhHhNYTV5+bSa10/fU1twQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Ten = "Nam",
                            TinhTrangLamViec = 0,
                            TwoFactorEnabled = false,
                            UserName = "SystemAdmin"
                        },
                        new
                        {
                            Id = new Guid("53e27774-4d9e-47bc-a7dc-b4faa6b9e140"),
                            AccessFailedCount = 0,
                            CanCuocCongDan = "0987654321",
                            ConcurrencyStamp = "fa0c89b7-6188-48be-b115-8ecf96891059",
                            DiaChi = "Cần Thơ",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            GioiTinh = true,
                            Ho = "Lương Nhựt",
                            LoaiTaiKhoan = 1,
                            LockoutEnabled = false,
                            MaSo = "Admin",
                            NgaySinh = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAEAACcQAAAAECXlvZfpL+RU/x/cn5DmMq5K8vQ6PSS9RUWsvPOIhWmBDI9aD6+ejkvnY7p7JET0Fw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Ten = "Nam",
                            TinhTrangLamViec = 0,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("NgayNghiMacDinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoNgayLamViec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Ten")
                        .IsUnique();

                    b.ToTable("ChiMuc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietCheBien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdCongThuc")
                        .HasColumnType("int");

                    b.Property<long>("IdKeHoachCheBien")
                        .HasColumnType("bigint");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SoLuongDaThem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrangThaiChiTiet")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCongThuc");

                    b.HasIndex("IdKeHoachCheBien");

                    b.ToTable("ChiTietCheBien_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietCongThuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdCongThuc")
                        .HasColumnType("int");

                    b.Property<int>("IdNguyenVatLieu")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdCongThuc");

                    b.HasIndex("IdNguyenVatLieu");

                    b.ToTable("ChiTietCongThuc_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietDatHang", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DonGiaGoiY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("IdKeHoachDatHang")
                        .HasColumnType("bigint");

                    b.Property<int>("IdNguyenVatLieu")
                        .HasColumnType("int");

                    b.Property<int?>("IdNhaCungCap")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SoLuongDaThem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TrangThaiChiTiet")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKeHoachDatHang");

                    b.HasIndex("IdNguyenVatLieu");

                    b.HasIndex("IdNhaCungCap");

                    b.ToTable("ChiTietDatHang_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DonGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("DonViTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GiamGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("IdHoaDon")
                        .HasColumnType("bigint");

                    b.Property<int>("IdNguyenVatLieu")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<decimal>("ThanhTien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdNguyenVatLieu");

                    b.ToTable("ChiTietHoaDon_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietPhieuCheBien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DonViTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCongThuc")
                        .HasColumnType("int");

                    b.Property<long>("IdPhieu")
                        .HasColumnType("bigint");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdCongThuc");

                    b.HasIndex("IdPhieu");

                    b.ToTable("ChiTietPhieuCheBien_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.CongThuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DinhDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdSanPham");

                    b.HasIndex("MaSo", "Ten")
                        .IsUnique();

                    b.ToTable("CongThuc_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.DonViTinh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CoBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<long>("GiaTriChuyenDoi")
                        .HasColumnType("bigint");

                    b.Property<int?>("IdNguyenVatLieu")
                        .HasColumnType("int");

                    b.Property<int?>("IdSanPham")
                        .HasColumnType("int");

                    b.Property<int>("LoaiDongGoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdNguyenVatLieu");

                    b.HasIndex("IdSanPham");

                    b.ToTable("DonViTinh_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.HoaDon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdChiMuc")
                        .HasColumnType("int");

                    b.Property<long>("IdKeHoach")
                        .HasColumnType("bigint");

                    b.Property<int>("IdNCC")
                        .HasColumnType("int");

                    b.Property<Guid>("IdNguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaLuuTru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayMua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 789, DateTimeKind.Local).AddTicks(1166));

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 787, DateTimeKind.Local).AddTicks(4069));

                    b.Property<string>("SoHoaDon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SoTienDaTra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ThanhToanHoaDon")
                        .HasColumnType("int");

                    b.Property<int>("ThueSuat")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("IdChiMuc");

                    b.HasIndex("IdKeHoach");

                    b.HasIndex("IdNCC");

                    b.HasIndex("IdNguoiTao");

                    b.HasIndex("MaLuuTru")
                        .IsUnique();

                    b.ToTable("HoaDon_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.KeHoachCheBien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdChiMuc")
                        .HasColumnType("int");

                    b.Property<Guid>("IdNguoiNhan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LenDatHang")
                        .HasColumnType("bit");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayBatDauDuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 794, DateTimeKind.Local).AddTicks(7405));

                    b.Property<DateTime>("NgayKetThucDuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 794, DateTimeKind.Local).AddTicks(7728));

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 794, DateTimeKind.Local).AddTicks(6911));

                    b.Property<bool>("NhanKeHoach")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChiMuc");

                    b.HasIndex("IdNguoiNhan");

                    b.HasIndex("IdNguoiTao");

                    b.HasIndex("MaSo")
                        .IsUnique();

                    b.ToTable("KeHoachCheBien_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.KeHoachDatHang", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DatHang")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdChiMuc")
                        .HasColumnType("int");

                    b.Property<Guid>("IdNguoiNhan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayBatDauDuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 807, DateTimeKind.Local).AddTicks(8280));

                    b.Property<DateTime>("NgayKetThucDuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 807, DateTimeKind.Local).AddTicks(8612));

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 807, DateTimeKind.Local).AddTicks(7787));

                    b.Property<bool>("NhanKeHoach")
                        .HasColumnType("bit");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChiMuc");

                    b.HasIndex("IdNguoiNhan");

                    b.HasIndex("IdNguoiTao");

                    b.HasIndex("MaSo")
                        .IsUnique();

                    b.ToTable("KeHoachDatHang_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.LoaiNguyenVatLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("NhomLoaiNVL")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("MaSo", "Ten")
                        .IsUnique();

                    b.ToTable("LoaiNguyenVatLieu_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.LoaiSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNhomSanPham")
                        .HasColumnType("int");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("IdNhomSanPham");

                    b.HasIndex("MaSo", "Ten")
                        .IsUnique();

                    b.ToTable("LoaiSanPham_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NgayNghiTuChon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdChiMuc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNghi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdChiMuc");

                    b.ToTable("NgayNghiTuChon_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NguyenVatLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLoaiNVL")
                        .HasColumnType("int");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MucTonCaoNhat")
                        .HasColumnType("bigint");

                    b.Property<long>("MucTonThapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<bool>("NhacNho")
                        .HasColumnType("bit");

                    b.Property<long>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiNVL");

                    b.HasIndex("MaSo", "Ten")
                        .IsUnique();

                    b.ToTable("NguyenVatLieu_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NhaCungCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoThue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("MaSo")
                        .IsUnique();

                    b.ToTable("NhaCungCap_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NhomSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("MaSo", "Ten")
                        .IsUnique();

                    b.ToTable("NhomSanPham_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.PhieuCheBien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdChiMuc")
                        .HasColumnType("int");

                    b.Property<long>("IdKeHoach")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("IdNguoiDuyet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiTao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayHoanThanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 846, DateTimeKind.Local).AddTicks(1701));

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 846, DateTimeKind.Local).AddTicks(1050));

                    b.Property<int>("TrangThaiPhieu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdChiMuc");

                    b.HasIndex("IdKeHoach");

                    b.HasIndex("IdNguoiDuyet");

                    b.HasIndex("IdNguoiTao");

                    b.HasIndex("MaSo")
                        .IsUnique();

                    b.ToTable("PhieuCheBien_Inc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.QuanLyMaSo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DinhDau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("ViTri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.HasIndex("Ten")
                        .IsUnique();

                    b.ToTable("QuanLyMaSo_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdLoaiSanPham")
                        .HasColumnType("int");

                    b.Property<string>("MaSo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MucTonCaoNhat")
                        .HasColumnType("bigint");

                    b.Property<long>("MucTonThapNhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<bool>("NhacNho")
                        .HasColumnType("bit");

                    b.Property<long>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AI");

                    b.HasKey("Id");

                    b.HasIndex("IdLoaiSanPham");

                    b.HasIndex("MaSo", "Ten")
                        .IsUnique();

                    b.ToTable("SanPham_Std");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ThongBao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("IdChiMuc")
                        .HasColumnType("int");

                    b.Property<Guid>("IdNguoiGui")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNguoiNhan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LoaiThongBao")
                        .HasColumnType("int");

                    b.Property<string>("MaKeHoach")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("NgayNhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 8, 27, 15, 11, 47, 838, DateTimeKind.Local).AddTicks(1308));

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Xem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdChiMuc");

                    b.HasIndex("IdNguoiGui");

                    b.HasIndex("IdNguoiNhan");

                    b.ToTable("ThongBao_Inc");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietCheBien", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.CongThuc", "CongThuc")
                        .WithMany("ChiTietCheBiens")
                        .HasForeignKey("IdCongThuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.KeHoachCheBien", "KeHoachCheBien")
                        .WithMany("ChiTietCheBiens")
                        .HasForeignKey("IdKeHoachCheBien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("KeHoachCheBien");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietCongThuc", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.CongThuc", "CongThuc")
                        .WithMany("ChiTietCongThucs")
                        .HasForeignKey("IdCongThuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.NguyenVatLieu", "NguyenVatLieu")
                        .WithMany("ChiTietCongThucs")
                        .HasForeignKey("IdNguyenVatLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("NguyenVatLieu");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietDatHang", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.KeHoachDatHang", "KeHoachDatHang")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("IdKeHoachDatHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.NguyenVatLieu", "NguyenVatLieu")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("IdNguyenVatLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("ChiTietDatHangs")
                        .HasForeignKey("IdNhaCungCap");

                    b.Navigation("KeHoachDatHang");

                    b.Navigation("NguyenVatLieu");

                    b.Navigation("NhaCungCap");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietHoaDon", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.HoaDon", "HoaDon")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.NguyenVatLieu", "NguyenVatLieu")
                        .WithMany("ChiTietHoaDons")
                        .HasForeignKey("IdNguyenVatLieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("NguyenVatLieu");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiTietPhieuCheBien", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.CongThuc", "CongThuc")
                        .WithMany("ChiTietPhieuCheBiens")
                        .HasForeignKey("IdCongThuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.PhieuCheBien", "PhieuCheBien")
                        .WithMany("ChiTietPhieuCheBiens")
                        .HasForeignKey("IdPhieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongThuc");

                    b.Navigation("PhieuCheBien");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.CongThuc", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.SanPham", "SanPham")
                        .WithMany("CongThucs")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.DonViTinh", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.NguyenVatLieu", "NguyenVatLieu")
                        .WithMany("DonViTinhs")
                        .HasForeignKey("IdNguyenVatLieu");

                    b.HasOne("QuanLyKho.Data.Entities.SanPham", "SanPham")
                        .WithMany("DonViTinhs")
                        .HasForeignKey("IdSanPham");

                    b.Navigation("NguyenVatLieu");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.HoaDon", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.ChiMuc", "ChiMuc")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdChiMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.KeHoachDatHang", "KeHoachDatHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdKeHoach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNCC")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiTao")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdNguoiTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiMuc");

                    b.Navigation("KeHoachDatHang");

                    b.Navigation("NguoiTao");

                    b.Navigation("NhaCungCap");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.KeHoachCheBien", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.ChiMuc", "ChiMuc")
                        .WithMany("KeHoachCheBiens")
                        .HasForeignKey("IdChiMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiNhan")
                        .WithMany("NguoiNhanKeHoachCheBiens")
                        .HasForeignKey("IdNguoiNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiTao")
                        .WithMany("NguoiTaoKeHoachCheBiens")
                        .HasForeignKey("IdNguoiTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiMuc");

                    b.Navigation("NguoiNhan");

                    b.Navigation("NguoiTao");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.KeHoachDatHang", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.ChiMuc", "ChiMuc")
                        .WithMany("KeHoachDatHangs")
                        .HasForeignKey("IdChiMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiNhan")
                        .WithMany("NguoiNhanKeHoachDatHangs")
                        .HasForeignKey("IdNguoiNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiTao")
                        .WithMany("NguoiTaoKeHoachDatHangs")
                        .HasForeignKey("IdNguoiTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiMuc");

                    b.Navigation("NguoiNhan");

                    b.Navigation("NguoiTao");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.LoaiSanPham", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.NhomSanPham", "NhomSanPham")
                        .WithMany("LoaiSanPhams")
                        .HasForeignKey("IdNhomSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhomSanPham");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NgayNghiTuChon", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.ChiMuc", "ChiMuc")
                        .WithMany("NgayNghiTuChons")
                        .HasForeignKey("IdChiMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiMuc");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NguyenVatLieu", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.LoaiNguyenVatLieu", "LoaiNguyenVatLieu")
                        .WithMany("NguyenVatLieus")
                        .HasForeignKey("IdLoaiNVL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiNguyenVatLieu");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.PhieuCheBien", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.ChiMuc", "ChiMuc")
                        .WithMany("PhieuCheBiens")
                        .HasForeignKey("IdChiMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.KeHoachCheBien", "KeHoachCheBien")
                        .WithMany("PhieuCheBiens")
                        .HasForeignKey("IdKeHoach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiDuyet")
                        .WithMany("NguoiDuyetPhieus")
                        .HasForeignKey("IdNguoiDuyet");

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiTao")
                        .WithMany("NguoiTaoPhieus")
                        .HasForeignKey("IdNguoiTao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiMuc");

                    b.Navigation("KeHoachCheBien");

                    b.Navigation("NguoiDuyet");

                    b.Navigation("NguoiTao");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.SanPham", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("IdLoaiSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ThongBao", b =>
                {
                    b.HasOne("QuanLyKho.Data.Entities.ChiMuc", "ChiMuc")
                        .WithMany("ThongBaos")
                        .HasForeignKey("IdChiMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiGui")
                        .WithMany("NguoiGuiThongBaos")
                        .HasForeignKey("IdNguoiGui")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Data.Entities.AppUser", "NguoiNhan")
                        .WithMany("NguoiNhanThongBaos")
                        .HasForeignKey("IdNguoiNhan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiMuc");

                    b.Navigation("NguoiGui");

                    b.Navigation("NguoiNhan");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.AppUser", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("NguoiDuyetPhieus");

                    b.Navigation("NguoiGuiThongBaos");

                    b.Navigation("NguoiNhanKeHoachCheBiens");

                    b.Navigation("NguoiNhanKeHoachDatHangs");

                    b.Navigation("NguoiNhanThongBaos");

                    b.Navigation("NguoiTaoKeHoachCheBiens");

                    b.Navigation("NguoiTaoKeHoachDatHangs");

                    b.Navigation("NguoiTaoPhieus");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.ChiMuc", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("KeHoachCheBiens");

                    b.Navigation("KeHoachDatHangs");

                    b.Navigation("NgayNghiTuChons");

                    b.Navigation("PhieuCheBiens");

                    b.Navigation("ThongBaos");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.CongThuc", b =>
                {
                    b.Navigation("ChiTietCheBiens");

                    b.Navigation("ChiTietCongThucs");

                    b.Navigation("ChiTietPhieuCheBiens");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.HoaDon", b =>
                {
                    b.Navigation("ChiTietHoaDons");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.KeHoachCheBien", b =>
                {
                    b.Navigation("ChiTietCheBiens");

                    b.Navigation("PhieuCheBiens");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.KeHoachDatHang", b =>
                {
                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.LoaiNguyenVatLieu", b =>
                {
                    b.Navigation("NguyenVatLieus");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NguyenVatLieu", b =>
                {
                    b.Navigation("ChiTietCongThucs");

                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("ChiTietHoaDons");

                    b.Navigation("DonViTinhs");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NhaCungCap", b =>
                {
                    b.Navigation("ChiTietDatHangs");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.NhomSanPham", b =>
                {
                    b.Navigation("LoaiSanPhams");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.PhieuCheBien", b =>
                {
                    b.Navigation("ChiTietPhieuCheBiens");
                });

            modelBuilder.Entity("QuanLyKho.Data.Entities.SanPham", b =>
                {
                    b.Navigation("CongThucs");

                    b.Navigation("DonViTinhs");
                });
#pragma warning restore 612, 618
        }
    }
}
